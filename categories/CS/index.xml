<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>CS on mlyixi的博客</title><link>https://mlyixi.github.io/categories/CS/</link><description>Recent content in CS on mlyixi的博客</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Sun, 24 Jan 2021 10:08:52 +0800</lastBuildDate><atom:link href="https://mlyixi.github.io/categories/CS/index.xml" rel="self" type="application/rss+xml"/><item><title>git简易服务器</title><link>https://mlyixi.github.io/post/cs/git%E7%AE%80%E6%98%93%E6%9C%8D%E5%8A%A1%E5%99%A8/</link><pubDate>Sun, 24 Jan 2021 10:08:52 +0800</pubDate><guid>https://mlyixi.github.io/post/cs/git%E7%AE%80%E6%98%93%E6%9C%8D%E5%8A%A1%E5%99%A8/</guid><description>最近在整理资料，纠结于代码如何备份，最终觉得还是放到git里比较好。 之前使用的gitlab，但web界面太占资源，而且实验室除了我管理外估计也没有其它人用了，所以权限也不用管理(排除gitolite)。所以直接git init --bare走起。 https://git-scm.com/book/en/v2/Git-on-the-Server-Setting-Up-the-Server 服务端 添加用户 1 2 3 4 5 sudo adduser git su git cd mkdir .ssh &amp;amp;&amp;amp;</description></item><item><title>Mysql启用远程连接</title><link>https://mlyixi.github.io/post/cs/mysql%E5%90%AF%E7%94%A8%E8%BF%9C%E7%A8%8B%E8%BF%9E%E6%8E%A5/</link><pubDate>Mon, 11 Jan 2021 14:33:06 +0800</pubDate><guid>https://mlyixi.github.io/post/cs/mysql%E5%90%AF%E7%94%A8%E8%BF%9C%E7%A8%8B%E8%BF%9E%E6%8E%A5/</guid><description>windows下mysql启用远程连接 打开workbench,在左侧的Users and Privileges标签中将对应用户(root)的From Host值改为% ubuntu下mysql启用远程连接 同上，但还要配置/etc/mysql/mysql.conf.d/mysqld.cnf,注</description></item><item><title>代码大全</title><link>https://mlyixi.github.io/post/cs/%E4%BB%A3%E7%A0%81%E5%A4%A7%E5%85%A8/</link><pubDate>Mon, 11 Jan 2021 14:19:54 +0800</pubDate><guid>https://mlyixi.github.io/post/cs/%E4%BB%A3%E7%A0%81%E5%A4%A7%E5%85%A8/</guid><description>软件构建 软件开发活动 定义问题 需求分析 规划构建 软件架构 详细设计 编码与调试 单元测试 集成测试 集成 系统测试 保障维护 软件构建活动 编码与调试 规划构建 详细设计 单元测试 集成测试 集成 形象化比喻 写作: 小程序的可读性. 种植: 每次做一点. 生长: 原型+功能. 建造: 蓝图+施工.设计会根据问题规模而改变. 序列</description></item><item><title>Win10install</title><link>https://mlyixi.github.io/post/cs/win10install/</link><pubDate>Mon, 04 Jan 2021 16:50:10 +0800</pubDate><guid>https://mlyixi.github.io/post/cs/win10install/</guid><description>准备usb 将usb格式化为fat32,并将win10安装镜像内的文件复制过去. 1.有可能.wim文件过大,进行切割. 1 Dism /Split-Image /ImageFile:D:\sources\install.wim /SWMFile:E:\sources\install.swm /FileSize:3800 U盘直接格式成MBR的FAT32即可,不要将它转成GPT格式.否则会导致各种问题. 引导进入安装 Shift + F10进入命令行. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18</description></item><item><title>gpg使用</title><link>https://mlyixi.github.io/post/cs/gpg%E4%BD%BF%E7%94%A8/</link><pubDate>Sun, 22 Dec 2019 10:08:52 +0800</pubDate><guid>https://mlyixi.github.io/post/cs/gpg%E4%BD%BF%E7%94%A8/</guid><description>PGP和GPG经常搞乱，这里梳理下。 PGP 英文全称为Pretty Good Privacy, 是一个商业软件，由Phil Zimmermann开发，最终被赛门铁克收购，需要付费。 OpenPGP OpenPGP是基于PGP软件的一种协议，定义了加密消息、签名、私钥和用于交换公钥的证书统一标准，RFC4880。 GPG GnuPG是符合</description></item><item><title>SurfacePro双引导</title><link>https://mlyixi.github.io/post/cs/SurfacePro%E5%8F%8C%E5%BC%95%E5%AF%BC/</link><pubDate>Mon, 03 Sep 2018 14:08:52 +0800</pubDate><guid>https://mlyixi.github.io/post/cs/SurfacePro%E5%8F%8C%E5%BC%95%E5%AF%BC/</guid><description>安装 首先，禁用可信计算模块TPM和修改安全引导为信任第三方签名。 其次，查看磁盘结构，将Raid-0(Intel Rapid &amp;hellip;)修改为AHCI。 然后，UEFI重装windows和安装ubuntu即可。 选择internal drive 否则会出现不能引导Windows的问题。</description></item><item><title>docker基本概念</title><link>https://mlyixi.github.io/post/cs/docker%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5/</link><pubDate>Tue, 26 Jun 2018 14:08:52 +0800</pubDate><guid>https://mlyixi.github.io/post/cs/docker%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5/</guid><description>docker 安装ubuntu自带的docker: 1 2 3 sudo apt install docker-io docker-compose sudo systemctl start docker sudo systemctl enable docker 安装最新的docker: 1 2 3 4 5 sudo apt-get -y install apt-transport-https ca-certificates curl software-properties-common curl -fsSL http://mirrors.aliyun.com/docker-ce/linux/ubuntu/gpg | sudo apt-key add - sudo add-apt-repository &amp;#34;deb [arch=amd64] http://mirrors.aliyun.com/docker-ce/linux/ubuntu $(lsb_release -cs)stable&amp;#34; sudo apt-get -y install docker-ce sudo usermod -aG docker $USER bootfs rootfs 换源： 1 2 3 vi /etc/docker/daemon.json &amp;#34;registry-mirrors&amp;#34;: [&amp;#34;https://docker.mirrors.ustc.edu.cn&amp;#34;], 重启： 1 2 sudo systemctl daemon-reload sudo systemctl restart docker 安装docker-compose: 1 2 3 4 sudo curl -L &amp;#34;https://github.com/docker/compose/releases/download/1.25.4/docker-compose-$(uname -s)-$(uname -m)&amp;#34; -o /usr/local/bin/docker-compose sudo chmod</description></item><item><title>CMakeLists基本概念</title><link>https://mlyixi.github.io/post/cs/CMakeLists%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5/</link><pubDate>Sat, 26 Nov 2016 14:08:52 +0800</pubDate><guid>https://mlyixi.github.io/post/cs/CMakeLists%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5/</guid><description>cmake 常用项，注意顺序 1 2 cmake_minimum_required(VERSION 3.5) project(pcap_tutorial) # 工程名 预处理，如变量，查找依赖等 1 set(CMAKE_CXX_STANDARD 11) # 设置cmake变量 有些变量具有特别含义，如: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 set(CMAKE_BUILD_TYPE &amp;#34;Release&amp;#34;) # 编译成Release(定义NDEBUG宏),相当于cmake参数-DCMAKE_BUILD_TYPE=</description></item><item><title>GPT修复记</title><link>https://mlyixi.github.io/post/cs/GPT%E4%BF%AE%E5%A4%8D%E8%AE%B0/</link><pubDate>Tue, 27 Oct 2015 14:08:52 +0800</pubDate><guid>https://mlyixi.github.io/post/cs/GPT%E4%BF%AE%E5%A4%8D%E8%AE%B0/</guid><description>现在用的SSD+HDD混合硬盘, GPT分区(OSX+Win7+ARCH Linux&amp;mdash;好久没上Linux了). 一真用的好好的. 不过好像有次当机后OSX不认HDD分区了.Win下没问题,我也就不当回事,接着用了. 今天升级OSX到10.11, 发现问题依旧,打开磁盘实用工具后发</description></item><item><title>安装使用graphviz</title><link>https://mlyixi.github.io/post/cs/%E5%AE%89%E8%A3%85%E4%BD%BF%E7%94%A8graphviz/</link><pubDate>Thu, 29 Jan 2015 14:09:52 +0800</pubDate><guid>https://mlyixi.github.io/post/cs/%E5%AE%89%E8%A3%85%E4%BD%BF%E7%94%A8graphviz/</guid><description>Graphviz是一个脚本化创建图表并自动布局的开源应用程序.应用广泛. 安装 1 brew install graphviz 使用 无向图graph 1 2 3 4 5 graph example1 { Server1 -- Server2 Server2 -- Server3 Server3 -- Server1 } 有向图digraph 1 2 3 4 5 digraph example2 { Server1 -&amp;gt; Server2 Server2 -&amp;gt; Server3 Server3 -&amp;gt; Server1 } 对象和属性 对象 有全局对象和局部对象之分 点node 线edge 属性 图属性: 大小size:</description></item><item><title>寻找vps</title><link>https://mlyixi.github.io/post/cs/%E5%AF%BB%E6%89%BEvps/</link><pubDate>Mon, 26 Jan 2015 14:09:52 +0800</pubDate><guid>https://mlyixi.github.io/post/cs/%E5%AF%BB%E6%89%BEvps/</guid><description>国内形势越来越严峻,故想找个能支持fq的vps来作博客空间. 搬瓦工 价格很便宜,不过不知道速度怎么样 DigitOcean 看评论比较好,不过有点贵. Linode 更贵了. 暂时还可以用,先放放吧.</description></item><item><title>Doxygen安装和使用</title><link>https://mlyixi.github.io/post/cs/Doxygen%E5%AE%89%E8%A3%85%E5%92%8C%E4%BD%BF%E7%94%A8/</link><pubDate>Mon, 12 Jan 2015 14:08:52 +0800</pubDate><guid>https://mlyixi.github.io/post/cs/Doxygen%E5%AE%89%E8%A3%85%E5%92%8C%E4%BD%BF%E7%94%A8/</guid><description>Doxygen 在Xcode插件管理这一文章中列出了OSX下常用的文档生成器,这里我们重点介绍Doxygen 安装 到官网下直接下载图形界面 通过homebrew安装brew install doxygen 使用 doxygen 生成文档 生成配置文件 doxygen -g会在当前目录下生成配置文件Doxyfile. 编辑配置文件 Doxyfile与makefile</description></item><item><title>Transmission上六维</title><link>https://mlyixi.github.io/post/cs/Transmission%E4%B8%8A%E5%85%AD%E7%BB%B4/</link><pubDate>Fri, 26 Dec 2014 14:08:52 +0800</pubDate><guid>https://mlyixi.github.io/post/cs/Transmission%E4%B8%8A%E5%85%AD%E7%BB%B4/</guid><description>重装了实验室网关(archlinux 3.17.4),发现transmission连不上六维的tracker了.之前(netcfg)明明是可以的.网络配置都是copy的哈,为什么换成netctl就不行了呢. 更奇怪的是我的ipv6-nat下的局域网电脑是可以连上的(ipv6好好的).</description></item><item><title>github协议和多用户免密码推送</title><link>https://mlyixi.github.io/post/cs/github%E5%8D%8F%E8%AE%AE%E5%92%8C%E5%A4%9A%E7%94%A8%E6%88%B7%E5%85%8D%E5%AF%86%E7%A0%81%E6%8E%A8%E9%80%81/</link><pubDate>Mon, 22 Dec 2014 10:08:52 +0800</pubDate><guid>https://mlyixi.github.io/post/cs/github%E5%8D%8F%E8%AE%AE%E5%92%8C%E5%A4%9A%E7%94%A8%E6%88%B7%E5%85%8D%E5%AF%86%E7%A0%81%E6%8E%A8%E9%80%81/</guid><description>今天发现github推出了MAC下的图形管理软件,果断试用了下,发现蛮不错的.可惜好像不支持多帐号. 想着用多帐号模拟分布式合作练习git操作的 = =. 昨天新建了个用户,打算把练习代码放到上面去, 结果总是显示empty reply from server. 可能的原因是: 用的https协议,被墙了. 没有配置当前仓库下的</description></item><item><title>MATLAB中M文件的编码</title><link>https://mlyixi.github.io/post/cs/MATLAB%E4%B8%ADM%E6%96%87%E4%BB%B6%E7%9A%84%E7%BC%96%E7%A0%81/</link><pubDate>Sat, 06 Dec 2014 14:08:52 +0800</pubDate><guid>https://mlyixi.github.io/post/cs/MATLAB%E4%B8%ADM%E6%96%87%E4%BB%B6%E7%9A%84%E7%BC%96%E7%A0%81/</guid><description>试着把windows下写的M文件拿到黑苹果下,结果打开后注释乱码了. 尝试着把文件改成UTF8编码,但是MATLAB还是乱码.看了下官方文档,发现MATLAB用的是windows那一套:根据你的首选语言确定编码,而不用unicode编码. windows下我们都是安装的中文系统,默认</description></item><item><title>ProGit摘要7-工作流</title><link>https://mlyixi.github.io/post/cs/ProGit%E6%91%98%E8%A6%817-%E5%B7%A5%E4%BD%9C%E6%B5%81/</link><pubDate>Thu, 30 Oct 2014 15:18:52 +0800</pubDate><guid>https://mlyixi.github.io/post/cs/ProGit%E6%91%98%E8%A6%817-%E5%B7%A5%E4%BD%9C%E6%B5%81/</guid><description>集中式 类似于集中式版本控制系统(CVCS),Git集中式工作流程使用的也是单点协作模型:一个存放代码仓库的中心服务器,可以接受所有开发者提交的代码. 集中式工作流 如果两个开发者从中心仓库克隆代码下来,同时作了一些修订,那么只有第一个开发者可以顺利地把数据推送到共享服务器。第二个开发</description></item><item><title>ProGit摘要6-子模块</title><link>https://mlyixi.github.io/post/cs/ProGit%E6%91%98%E8%A6%816-%E5%AD%90%E6%A8%A1%E5%9D%97/</link><pubDate>Wed, 29 Oct 2014 15:18:52 +0800</pubDate><guid>https://mlyixi.github.io/post/cs/ProGit%E6%91%98%E8%A6%816-%E5%AD%90%E6%A8%A1%E5%9D%97/</guid><description>托管服务中有好多开发库可以供我们使用,我们怎么将它们引入到我们的项目里面来呢,这就是子模块的概念. 添加 1 git submodule add git://uri directoryName 然后你可以通过git status和.gitmodules查看修改内容及子模块信息. 记得添加后要提交. 克隆 现在我们找到一个项目,但是它包含子模块,我们怎么克隆到本地呢 1</description></item><item><title>ProGit摘要5-托管</title><link>https://mlyixi.github.io/post/cs/ProGit%E6%91%98%E8%A6%815-%E6%89%98%E7%AE%A1/</link><pubDate>Wed, 29 Oct 2014 13:18:52 +0800</pubDate><guid>https://mlyixi.github.io/post/cs/ProGit%E6%91%98%E8%A6%815-%E6%89%98%E7%AE%A1/</guid><description>好了,学了本地/远程仓库,分支和合并/衍合,基本可以拿来运用了.在使用中更能理解嘛. 本地的好说,但是远程的怎么办,没服务器啊. 嗯,这时有公司就提供代码托管服务了,如github,gitcafe,oschina. 一般开放项目(开源)不收费,私有项目(不开源)收费. 首先我们得在这些托</description></item><item><title>ProGit摘要4-衍合</title><link>https://mlyixi.github.io/post/cs/ProGit%E6%91%98%E8%A6%814-%E8%A1%8D%E5%90%88/</link><pubDate>Tue, 28 Oct 2014 13:18:52 +0800</pubDate><guid>https://mlyixi.github.io/post/cs/ProGit%E6%91%98%E8%A6%814-%E8%A1%8D%E5%90%88/</guid><description>之前我们讨论了合并(merge),它会进行一次三头合并. merge to C5 衍合 其实,我们还可以把C3里产生的补丁在C4中再打一遍,这种操作就叫衍合 1 2 git checkout experiment git rebase master 或 1 git rebase [主分支] [特性分支] rebase 确认后,你就可以将之快速合并了 rebase 那么你会问,有区别吗?衍合时也是需要你手动个性补丁的.但是比较两都</description></item><item><title>ProGit摘要3-再议分支</title><link>https://mlyixi.github.io/post/cs/ProGit%E6%91%98%E8%A6%813-%E5%86%8D%E8%AE%AE%E5%88%86%E6%94%AF/</link><pubDate>Sat, 25 Oct 2014 13:18:52 +0800</pubDate><guid>https://mlyixi.github.io/post/cs/ProGit%E6%91%98%E8%A6%813-%E5%86%8D%E8%AE%AE%E5%88%86%E6%94%AF/</guid><description>在之前的介绍中我们讨论了三种分支的情况(短期分支,相当于nightly),但在实际中并不足够. 本地分支 许多开发者喜欢同时拥有多个分支而不仅仅只有一个,比如仅在 master 分支中 保留完全稳定的代码,即已经发布或即将发布的代码。与此同时,他们还有一个名为 develop 或 next 的平行分支,专门用于后续的开发,或</description></item><item><title>latex-suite的安装和使用手记</title><link>https://mlyixi.github.io/post/cs/latex-suite%E7%9A%84%E5%AE%89%E8%A3%85%E5%92%8C%E4%BD%BF%E7%94%A8%E6%89%8B%E8%AE%B0/</link><pubDate>Fri, 24 Oct 2014 14:08:52 +0800</pubDate><guid>https://mlyixi.github.io/post/cs/latex-suite%E7%9A%84%E5%AE%89%E8%A3%85%E5%92%8C%E4%BD%BF%E7%94%A8%E6%89%8B%E8%AE%B0/</guid><description>换了hosts终于用上各种国外服务了,感谢imouto (imouto已经不可用了,而且我现在只用texstudio,简单) 翻到了以前的资料,转到博客中来 安装 下载安装包。 解压到~/.vim下 编辑~/.vimrc，按说明来吧。 1 2 3 4 5 filetype plugin on set shellslash set grepprg=grep\ -nH\ $* filetype indent on let g:tex_flavor=&amp;#39;latex&amp;#39; 编辑~/.vim/f</description></item><item><title>ProGit摘要2-远程仓库</title><link>https://mlyixi.github.io/post/cs/ProGit%E6%91%98%E8%A6%812-%E8%BF%9C%E7%A8%8B%E4%BB%93%E5%BA%93/</link><pubDate>Fri, 24 Oct 2014 10:18:52 +0800</pubDate><guid>https://mlyixi.github.io/post/cs/ProGit%E6%91%98%E8%A6%812-%E8%BF%9C%E7%A8%8B%E4%BB%93%E5%BA%93/</guid><description>上一节中我们介绍了git原理和本地仓库的使用,现在介绍远程仓库的使用 克隆仓库 远程 1 git clone git://uri 本地 1 git clone /path/to/repo/ 这样就克隆了远程仓库origin的所有分支,如origin/master. 注意,本地仓库也有master分支,当然还会有其它分支,但是它们没有仓库名(默认为本地嘛). 查看远程库 1 git</description></item><item><title>ProGit摘要1-本地仓库</title><link>https://mlyixi.github.io/post/cs/ProGit%E6%91%98%E8%A6%811-%E6%9C%AC%E5%9C%B0%E4%BB%93%E5%BA%93/</link><pubDate>Fri, 24 Oct 2014 10:08:52 +0800</pubDate><guid>https://mlyixi.github.io/post/cs/ProGit%E6%91%98%E8%A6%811-%E6%9C%AC%E5%9C%B0%E4%BB%93%E5%BA%93/</guid><description>看了几遍git方便的使用指南,但是由于不经常用,总是忘了,只记得最基本的clone,submodule之类的,完全不够用啊. 现在再看一篇经典著作《Pro Git》,并摘要如下. 书籍地址：https://iissnan.com/progit/ 基本原理 不像其它CVS那样保存差异数据,G</description></item><item><title>MathJax基础教程和快速参考</title><link>https://mlyixi.github.io/post/cs/MathJax%E5%9F%BA%E7%A1%80%E6%95%99%E7%A8%8B%E5%92%8C%E5%BF%AB%E9%80%9F%E5%8F%82%E8%80%83/</link><pubDate>Mon, 06 Oct 2014 14:08:52 +0800</pubDate><guid>https://mlyixi.github.io/post/cs/MathJax%E5%9F%BA%E7%A1%80%E6%95%99%E7%A8%8B%E5%92%8C%E5%BF%AB%E9%80%9F%E5%8F%82%E8%80%83/</guid><description>更多资料请参考此文和latex手册 MathJax基础 用mathjax渲染的公式可以在现代浏览器里面查看latex代码，方法是在公式上右键-&amp;gt;Show Math As-&amp;gt;Tex commands Wordpress中使用latex Wordpress本身会提供latex插件:WP-latex,是取自官方插件包jetp</description></item><item><title>YADR替换oh-my-zsh</title><link>https://mlyixi.github.io/post/cs/YADR%E6%9B%BF%E6%8D%A2oh-my-zsh/</link><pubDate>Fri, 26 Sep 2014 14:09:52 +0800</pubDate><guid>https://mlyixi.github.io/post/cs/YADR%E6%9B%BF%E6%8D%A2oh-my-zsh/</guid><description>由于喜欢agnoster主题,但是oh-my-zsh默认还是解决不了这个问题.所以考虑换个配置包.终于找到另一个不用配置的的配置包YADR,基本不用自己手动一点点搞了,除了自己下载iterm2,其它依赖会直接搞定: 它会安装homebrew(记得回车输入密码), 然后安装必要的软件,</description></item><item><title>TCPIP及wireshark分析</title><link>https://mlyixi.github.io/post/cs/TCPIP%E5%8F%8Awireshark%E5%88%86%E6%9E%90/</link><pubDate>Fri, 26 Sep 2014 14:08:52 +0800</pubDate><guid>https://mlyixi.github.io/post/cs/TCPIP%E5%8F%8Awireshark%E5%88%86%E6%9E%90/</guid><description>TCP 三次握手 开始: 客户发送Syn,Seq=X 服务发送Syn,Ack=X+1,Seq=Y 客户发送Ack=Y+1,Seq=Z 结束 服务发送Fin,Seq=X 客户发送Ack,Seq=X+1 客户发送Fin,Seq=Y 服务发送Ack,Seq=Y+1 wireshark分析使用 过滤器 协议过滤:如T</description></item><item><title>MATLAB基础</title><link>https://mlyixi.github.io/post/cs/MATLAB%E5%9F%BA%E7%A1%80/</link><pubDate>Sat, 06 Sep 2014 14:08:52 +0800</pubDate><guid>https://mlyixi.github.io/post/cs/MATLAB%E5%9F%BA%E7%A1%80/</guid><description>预定义名 eps: 最小浮点数 pi: $\pi$ i/j: 虚数单位 Inf/inf: 无穷大 intmax/intmin: 最大、最小正数 realmax/realmin: 最大、最小实数 函数 accuumarray cross cumsum cumprod dot prod sum tril, triu 变量管理 clear clc clf 工作空间图形化操作 who/whos save/load ans 工作目录 cd dir doc help which 运算 加法: + 减法: - 乘法: * 点乘: .* 左除: / 右除\ 点除: ./ 幂: ^ 转置: .' 共轭转置: ' 关系运算: ==, ~=,&amp;gt;,&amp;gt;=,&amp;lt;,&amp;lt;= 逻辑运算: &amp;amp;,|,~ all: 是否为全0; B=all(A),B=all(A,dim) any:</description></item><item><title>postgres基础</title><link>https://mlyixi.github.io/post/cs/postgres%E5%9F%BA%E7%A1%80/</link><pubDate>Sat, 06 Sep 2014 14:08:52 +0800</pubDate><guid>https://mlyixi.github.io/post/cs/postgres%E5%9F%BA%E7%A1%80/</guid><description>1 2 3 4 5 6 7 8 9 10 sudo su - postgres psql -c &amp;#34;alter user postgres with password &amp;#39;StrongAdminP@ssw0rd&amp;#39;&amp;#34; sudo vi /etc/postgresql/12/main/postgresql.conf listen_addresses = &amp;#39;*&amp;#39; sudo vi /etc/postgresql/12/main/pg_hba.conf host all all 192.168.10.0/24 md5 sudo systemctl restart postgresql sudo apt install pgadmin4 pgadmin4-apache2 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 create table dept( id serial primary key, name varchar(20) ) create table employee1( id serial primary key, name varchar(20), age int, salary real, dept_id int references dept (id) ) insert into dept (name) values(&amp;#39;人事部&amp;#39;); insert into dept (name) values(&amp;#39</description></item><item><title>latex系统说明</title><link>https://mlyixi.github.io/post/cs/latex%E7%B3%BB%E7%BB%9F%E8%AF%B4%E6%98%8E/</link><pubDate>Wed, 03 Sep 2014 14:08:52 +0800</pubDate><guid>https://mlyixi.github.io/post/cs/latex%E7%B3%BB%E7%BB%9F%E8%AF%B4%E6%98%8E/</guid><description>格式 plaintex latex2e context 其它格式:amstex,BLUe,HP tex, Jadetex, Lollipop, MacroTex,MeX,PHYS(E),PHYZZY,StarTex,Texinfo,Texsis,XMLTex,YTEX,ZzTex 引擎(编译器) tex tex3 e-tex pdftex pdflatex xetex luatex META*(辅助程序) MetaFont MetaPost MegaPost BibTex: 参考文献管理编译程序及格式,作用同bibliography环境 编译:先编译tex,生成aux文件,再用bibtex编译,而后再用latex生成带参考文献的文档 dvi2pdf dvipdf dvipdfm dvipdfmx</description></item><item><title>硬盘接口与参数</title><link>https://mlyixi.github.io/post/cs/%E7%A1%AC%E7%9B%98%E6%8E%A5%E5%8F%A3%E4%B8%8E%E5%8F%82%E6%95%B0/</link><pubDate>Wed, 03 Sep 2014 14:08:52 +0800</pubDate><guid>https://mlyixi.github.io/post/cs/%E7%A1%AC%E7%9B%98%E6%8E%A5%E5%8F%A3%E4%B8%8E%E5%8F%82%E6%95%B0/</guid><description>PCIe PCIe是一种物理接口：Peripheral Component Interconnect Express，替换PCI、PCI-X、AGP等接口 M.2 M.2是一种物理接口：Next Generation Form Factor (NGFF)，替换mSATA接口，一般用于笔记本，和U.2是竞争关系，使用PCIe MiniCard的物理布局，支持AHCI和NVMe控制接口</description></item><item><title>python科学计算环境搭建</title><link>https://mlyixi.github.io/post/cs/python%E7%A7%91%E5%AD%A6%E8%AE%A1%E7%AE%97%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/</link><pubDate>Tue, 26 Aug 2014 14:08:52 +0800</pubDate><guid>https://mlyixi.github.io/post/cs/python%E7%A7%91%E5%AD%A6%E8%AE%A1%E7%AE%97%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/</guid><description>安装homebrew 安装python,设置环境变量 安装forgtran 下载numpy包，python setup.py(不能用pip安装，已坏） pip install scipy 安装matplotlib: brew install freetype,libpng; pip install matplotlib.</description></item><item><title>wordpress的markdown</title><link>https://mlyixi.github.io/post/cs/wordpress%E7%9A%84markdown/</link><pubDate>Tue, 26 Aug 2014 14:08:52 +0800</pubDate><guid>https://mlyixi.github.io/post/cs/wordpress%E7%9A%84markdown/</guid><description>Markdown快速参考 强调 1 2 *Emphasize* _emphasize_ **Strong** __Strong__ 超链接 1 A [link](http://example.com &amp;#34;Title&amp;#34;). 或 1 2 3 Some text with [a link][1] and another [link][2]. [1]: http://example.com/ &amp;#34;Title&amp;#34; [2]: http://example.org/ &amp;#34;Title&amp;#34; 图片 1 Logo: ![Alt](/wp.png &amp;#34;Title&amp;#34;) 或 1 2 Smaller logo: ![Alt][1] [1]: /wp-smaller.png &amp;#34;Title&amp;#34; 脚注 1 2 I have more [^1] to say up here. [^1]: To say down here. 换行 wordpress不支持双空格换行,只能支持回车换行 列表 1 2 * Item - Item 或 1 2 3 4 5 1. Item 2. Item * Mixed * Mixed 3. Item 区块 1 2 3 &amp;gt; Block 1 &amp;gt; Block 2</description></item><item><title>美化shell</title><link>https://mlyixi.github.io/post/cs/%E7%BE%8E%E5%8C%96shell/</link><pubDate>Tue, 26 Aug 2014 14:08:52 +0800</pubDate><guid>https://mlyixi.github.io/post/cs/%E7%BE%8E%E5%8C%96shell/</guid><description>现在发现oh-my-zh并不是很好,更好的方法见这里 MAC: 安装 homebrew 安装软件: brew install zsh, vim , macvim etc... 注册环境变量:修改/etc/paths,将/usr/local/bin设为第一行。系统将优行查找/usr/local/bin中的程序 注册 shell:修改/etc/shells,添加/usr/loc</description></item><item><title>兼容UEFI2.3主板添加主板引导项</title><link>https://mlyixi.github.io/post/cs/%E5%85%BC%E5%AE%B9uefi2.3%E4%B8%BB%E6%9D%BF%E6%B7%BB%E5%8A%A0%E4%B8%BB%E6%9D%BF%E5%BC%95%E5%AF%BC%E9%A1%B9/</link><pubDate>Mon, 25 Aug 2014 14:08:52 +0800</pubDate><guid>https://mlyixi.github.io/post/cs/%E5%85%BC%E5%AE%B9uefi2.3%E4%B8%BB%E6%9D%BF%E6%B7%BB%E5%8A%A0%E4%B8%BB%E6%9D%BF%E5%BC%95%E5%AF%BC%E9%A1%B9/</guid><description>win和黑苹果双系统的引导其实是没有必要用clover的efi替换wbm的efi的。当然，如果你的主板支持uefi的情况比较好的，比如有图形界面的uefi引导，那么可以不用看下面。 添加主板的efi引导项(nvram)可以用UEFISHELL的bcfg, Linux的efibootm</description></item></channel></rss>