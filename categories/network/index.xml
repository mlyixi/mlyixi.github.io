<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>network on mlyixi的博客</title><link>https://mlyixi.github.io/categories/network/</link><description>Recent content in network on mlyixi的博客</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Wed, 20 Jan 2021 09:10:47 +0800</lastBuildDate><atom:link href="https://mlyixi.github.io/categories/network/index.xml" rel="self" type="application/rss+xml"/><item><title>DPI工具比较</title><link>https://mlyixi.github.io/post/network/dpi%E5%B7%A5%E5%85%B7%E6%AF%94%E8%BE%83/</link><pubDate>Wed, 20 Jan 2021 09:10:47 +0800</pubDate><guid>https://mlyixi.github.io/post/network/dpi%E5%B7%A5%E5%85%B7%E6%AF%94%E8%BE%83/</guid><description>Independent Comparison of Popular DPI Tools for Traffic Classification 采集工具： https://sourceforge.net/projects/vbsi/files/Release%206/ 数据集： https://cba.upc.edu/monitoring/traffic-classification 数据集好像不公开，可能要通过邮件申请。 摘要： 深度数据包检查（DPI）是用于流量分类的最新技术。按照传统观点，DPI是最准确的分类技术。因此，大多数流行的产品，无论是商业产品还是开源产品，都依赖某种DPI进行流量分类。但是，由于缺乏公共数据集</description></item><item><title>TinyfecVPN</title><link>https://mlyixi.github.io/post/network/tinyfecVPN/</link><pubDate>Fri, 15 Jan 2021 11:25:24 +0800</pubDate><guid>https://mlyixi.github.io/post/network/tinyfecVPN/</guid><description>编译无限制版 1 2 #makefile中改变目标TARGETS=amd64 make nolimit_release 1 2 3 4 5 6 7 8 #Server enable ip forward: echo 1 &amp;gt;/proc/sys/net/ipv4/ip_forward #setup SNAT rule: iptables -t nat -A POSTROUTING -s 10.222.0.0/16 ! -d 10.222.0.0/16 -j MASQUERADE #run tinyfecVPN server ./tinyvpn_amd64 -s -l 0.0.0.0:8855 --sub-net 10.222.2.0 --tun-dev tun100 --report 10 -k 1234 1 2 3 4 5 6 7 #run tinyFecVPN client ./tinyvpn_x86 -c -r 44.55.66.77:8855 --sub-net 10.222.2.0 --tun-dev tun100 --keep-reconnect --report 10 -k 1234 #add route rules ip route add 44.55.66.77/32 via 192.168.99.1 #change 44.55.66.77 to your server ip; 192.168.99.1 to your default gateway. ip route add 0.0.0.0/1 via 10.222.2.1 dev tun100 ip route add 128.0.0.0/1 via 10.222.2.1 dev</description></item><item><title>IOL_DHCP配置</title><link>https://mlyixi.github.io/post/network/IOL_DHCP%E9%85%8D%E7%BD%AE/</link><pubDate>Mon, 11 Jan 2021 14:34:15 +0800</pubDate><guid>https://mlyixi.github.io/post/network/IOL_DHCP%E9%85%8D%E7%BD%AE/</guid><description>初始化设置 刚进入系统会要求设置密码和管理端口，按提示操作即可。 配置网络接口 1 2 3 4 5 6 7 8 9 10 11 Router&amp;gt; enable Router# configure terminal Router(config)# hostname Router Router(config)# enable secret eve Router(config)# no ip domain-lookup Router(config)# interface ethernet 0/1 #这里接口名可能不同，按?查询。 Router(config-if)# ip address 192.168.5.1 255.255.255.0 Router(config-if)# no shutdown Router(config-if)# end Router# write 查看网络接口 1 Router# show interfaces DHCP Server 1 2 3 4 5 6 7 8 9 10 dhcp# configure terminal dhcp(config)# service dhcp dhcp(config)# ip dhcp excluded-address 192.168.5.1 192.168.5.100 //配置dhcp不分</description></item><item><title>Security_onion与OSSIM比较</title><link>https://mlyixi.github.io/post/network/security_onion%E4%B8%8EOSSIM%E6%AF%94%E8%BE%83/</link><pubDate>Mon, 11 Jan 2021 14:29:48 +0800</pubDate><guid>https://mlyixi.github.io/post/network/security_onion%E4%B8%8EOSSIM%E6%AF%94%E8%BE%83/</guid><description>https://securityonion.readthedocs.io/en/latest/about.html SecurityOnion与OSSIM(也叫AlienVault)对比 I use them both (AV and SO) in parallel, and while they are similar in many respects they both have different strengths. 我同时使用了它们（AV和SO），尽管它们在许多方面都相似，但是两者都有不同的优势。 AlienVault centrally captures and logs a lot of different data from many different data sources: syslog from devices, Windows Event Logs, vulnerability scan results, Snort/Surricata, etc. This itself is not too different from SO, but AV then correlates and cross correlates</description></item><item><title>网络空间测绘技术</title><link>https://mlyixi.github.io/post/network/%E7%BD%91%E7%BB%9C%E7%A9%BA%E9%97%B4%E6%B5%8B%E7%BB%98%E6%8A%80%E6%9C%AF/</link><pubDate>Mon, 11 Jan 2021 14:17:37 +0800</pubDate><guid>https://mlyixi.github.io/post/network/%E7%BD%91%E7%BB%9C%E7%A9%BA%E9%97%B4%E6%B5%8B%E7%BB%98%E6%8A%80%E6%9C%AF/</guid><description>网络空间测绘技术 https://www.shodan.io/ https://censys.io/ https://www.zoomeye.org/ https://quake.360.cn/quake/#/index https://fofa.so/ https://gobies.org/ 是软件 技术pk点: 目前功能指标： 端口扫描 元数据采集 目前性能指标： 端口数 协议数 ip数 指纹规则数 问题： 都只是很粗浅的实现了一小部分，点到为止，大量的新的技术并没有能够很好的融入进去。 目标 网络空间测绘就是绘制“网络攻防地图”，说白了也就是一个情报系统，情报系</description></item><item><title>解析超级虚拟实验室eve Ng的工作模式</title><link>https://mlyixi.github.io/post/network/%E8%A7%A3%E6%9E%90%E8%B6%85%E7%BA%A7%E8%99%9A%E6%8B%9F%E5%AE%9E%E9%AA%8C%E5%AE%A4eve-ng%E7%9A%84%E5%B7%A5%E4%BD%9C%E6%A8%A1%E5%BC%8F/</link><pubDate>Mon, 11 Jan 2021 13:39:02 +0800</pubDate><guid>https://mlyixi.github.io/post/network/%E8%A7%A3%E6%9E%90%E8%B6%85%E7%BA%A7%E8%99%9A%E6%8B%9F%E5%AE%9E%E9%AA%8C%E5%AE%A4eve-ng%E7%9A%84%E5%B7%A5%E4%BD%9C%E6%A8%A1%E5%BC%8F/</guid><description>转载自https://www.douban.com/note/629657625/ 近些年来，基于虚拟环境的网络设备或者实验室层出不穷。其中最为成功的虚拟实验室产品线以iou-web，unetlab，以及后来继承者eve-ng最为成功。因为原UNetlab的环境依旧在更新，因此现有</description></item><item><title>EVE-NG安装使用</title><link>https://mlyixi.github.io/post/network/eve-ng%E5%AE%89%E8%A3%85%E4%BD%BF%E7%94%A8/</link><pubDate>Fri, 08 Jan 2021 15:42:08 +0800</pubDate><guid>https://mlyixi.github.io/post/network/eve-ng%E5%AE%89%E8%A3%85%E4%BD%BF%E7%94%A8/</guid><description>eve-ng是基于ubuntu开发的网络仿真OS.由于eve-ng直接使用dynamips,qemu等虚拟化技术运行官方的固件,所以其仿真能力是最强的,和实物操作没什么分别.特别是网上有很多镜像,包括防火墙,vpn等,应有尽有,作为内网渗透环境来说最好不过了. 版本 eve-ng pro专业版,</description></item><item><title>n2n使用</title><link>https://mlyixi.github.io/post/network/n2n%E4%BD%BF%E7%94%A8/</link><pubDate>Mon, 04 Jan 2021 14:03:05 +0800</pubDate><guid>https://mlyixi.github.io/post/network/n2n%E4%BD%BF%E7%94%A8/</guid><description>基本概念 n2n是一个L2上基于P2P技术的VPN，实现了IPv4互联网上的一个overlay网络，该网络构建了一个虚拟网桥（虚拟交换机），从而形成一个虚拟局域网。 组织架构 Supernode超级节点：它在edge节点间建立握手，或为位于防火墙之后的节点中转数据。它的基础作用是注册节</description></item><item><title>IPv6主机</title><link>https://mlyixi.github.io/post/network/ipv6%E4%B8%BB%E6%9C%BA/</link><pubDate>Wed, 04 Nov 2020 14:08:52 +0800</pubDate><guid>https://mlyixi.github.io/post/network/ipv6%E4%B8%BB%E6%9C%BA/</guid><description>prefixpolicies 发现双栈网络下优先使用ipv6访问网站，查了一下是因为prefixpolicies的配置，默认为RFC3484标准配置。 Windows netsh interface ipv6 show prefixpolicies Linux cat /etc/gai.conf</description></item><item><title>报文和数据包的区别</title><link>https://mlyixi.github.io/post/network/%E6%8A%A5%E6%96%87%E5%92%8C%E6%95%B0%E6%8D%AE%E5%8C%85%E7%9A%84%E5%8C%BA%E5%88%AB/</link><pubDate>Wed, 04 Nov 2020 14:08:52 +0800</pubDate><guid>https://mlyixi.github.io/post/network/%E6%8A%A5%E6%96%87%E5%92%8C%E6%95%B0%E6%8D%AE%E5%8C%85%E7%9A%84%E5%8C%BA%E5%88%AB/</guid><description>应用层——消息(message) 传输层——数据段(segment) 网络层——分组、数据包（packet） 链路层——帧（frame） 物理层——PDU（bit）</description></item><item><title>Linux多网卡</title><link>https://mlyixi.github.io/post/linux/Linux%E5%A4%9A%E7%BD%91%E5%8D%A1/</link><pubDate>Tue, 04 Dec 2018 14:08:52 +0800</pubDate><guid>https://mlyixi.github.io/post/linux/Linux%E5%A4%9A%E7%BD%91%E5%8D%A1/</guid><description>Linux多网卡问题 问题描述 对于多块网卡的电脑，一个使用场景就是：将该电脑视作多个独立的收发系统，但共享一个cpu(多任务OS)。但这对于linux默认是不成立的：linux是一个弱终端系统模型（Weak End System Model)，上述使用场景的OS是一个强终端系统模型(SESM)。 区别是</description></item><item><title>理解交换</title><link>https://mlyixi.github.io/post/network/%E7%90%86%E8%A7%A3%E4%BA%A4%E6%8D%A2/</link><pubDate>Sun, 04 Nov 2018 14:08:52 +0800</pubDate><guid>https://mlyixi.github.io/post/network/%E7%90%86%E8%A7%A3%E4%BA%A4%E6%8D%A2/</guid><description>概述 将计算机(网络)互相连接起来要使用一些中间设备，ISO的术语称之为中继（relay）系统。根据中继系统所在的层次，可以有以下五种中继系统： 物理层（即常说的第一层、L1）中继系统，即转发器（repeater/hub）。 数据链路层（即第二层，L2），即网桥或桥接器（bridge）</description></item><item><title>iproute包介绍</title><link>https://mlyixi.github.io/post/linux/iproute%E5%8C%85%E4%BB%8B%E7%BB%8D/</link><pubDate>Mon, 08 Dec 2014 14:08:52 +0800</pubDate><guid>https://mlyixi.github.io/post/linux/iproute%E5%8C%85%E4%BB%8B%E7%BB%8D/</guid><description>你现在看的linux书籍是否还在介绍linux下用ifconfig,windows下用ipconfig查询ip,route查看路由？这完全out了。现在主流linux发行版一般不再默认安装这些unix上的net-tools了，而安装iproute2包。 iproute iproute提供了ip命</description></item><item><title>Archlinux网关安装与配置</title><link>https://mlyixi.github.io/post/linux/Archlinux%E7%BD%91%E5%85%B3%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/</link><pubDate>Sun, 30 Nov 2014 14:08:52 +0800</pubDate><guid>https://mlyixi.github.io/post/linux/Archlinux%E7%BD%91%E5%85%B3%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/</guid><description>Archlinux不是滚挂还是滚挂. 试着升级了一下网关(好久没更新了),尝试了pacdiff,不过我显然没有注意到问题所在,虽然还是可以启动,但是好多systemctl service是红的,网络也不行了(netcfg被netctl/networkd替换了),一些服务也不能启动了(</description></item></channel></rss>